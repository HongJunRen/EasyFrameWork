{"name":"Easyframework","tagline":"Easy to use.  Easy to code.","body":"# EasyFrameWork\r\n=============\r\n## 主旨：简单使用，快速开发。\r\n\r\n### 使用本框架开发，从访问数据库，到UI交互都可以快速，轻松完成。如无特别需求，基本可不写代码。\r\n\r\n### 简单示例\r\n\r\n### 实体:\r\n`public override void DataConfigure()`\r\n        `{`\r\n            `DataTable(\"Advertisement\");`\r\n            `DataConfig(m => m.ID).AsIncreasePrimaryKey(); `\r\n       `}`\r\n\r\n### 简单的两句，就完成了与数据库的设置。\r\n\r\n`public override void ViewConfigure()`\r\n        `{`\r\n            `ViewConfig(m => m.ID).AsHidden();`\r\n            `ViewConfig(m => m.Title).AsTextBox().Required().Order(1).MaxLength(100);`\r\n            `ViewConfig(m => m.Description).AsMutiLineTextBox().Order(101);`\r\n            `ViewConfig(m => m.Position).AsDropDownList().DataSource<EnumFlag.ADPosition>();`\r\n        `}`\r\n### 这是对UI的配置，如何呈现，一切随你简单配置。\r\n\r\n### 控制器（Controller）\r\n` public class AdvertisementController : BasicController<[Entity], [long], [Service]>`\r\n    `{` `}`\r\n不用写一句代码，增，删，改，查，便可轻松完成。\r\n\r\n### 界面（UI）\r\n列表：\r\n`@(`\r\n `Html.Grid().Name(\"AdvertisementList\")`\r\n     `.SetAsToolBar(\"#toolBar\")`\r\n     `.SetColumnTemplate(m => { m.Add(q => q.Title, \"<a>{Title}</a>\"); })`\r\n     `.ShowCheckbox(m => m.ID)`\r\n     `.OrderBy(m=>m.OrderIndex, Easy.Constant.DataEnumerate.OrderType.Descending)`\r\n`)`\r\n这样，便完成了一个复杂的列表页面，包括检索，分页，自定义排序等。\r\n编辑，新建：\r\n`@Html.EasyTags(2)`\r\n这样，便完成了一个2例N行的自动布局。\r\n\r\n\r\n## EasyFramework使用如此简单，并不代表它只能实现这样简单的东西。简约，但并不简单。\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}